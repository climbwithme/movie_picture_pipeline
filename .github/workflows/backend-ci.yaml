name: Backend Continuous Integration

on:
  # Triggers workflow manually or on pull request events
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      # Runs only when code in the backend directory changes
      - starter/backend/**

jobs:
  # Linting job: ensures the code adheres to ESLint rules
  Linting:
    runs-on: ubuntu-latest
    # Removed the invalid 'environment' field from the earlier version

    steps:
      # Step 1: Checkout the repository
      - name: Check the Repository
        uses: actions/checkout@v3

      # Step 2: Set up Python 3.10
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Step 3: Install dependencies using pipenv
      - name: Install Dependencies
        working-directory: starter/backend
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev

      # Step 4: Run linting
      - name: Run Lint
        working-directory: starter/backend
        run: |
          pipenv run lint || echo "Linting failed."

  # Test job: runs the test suite and ensures all tests pass
  Test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Check the Repository
        uses: actions/checkout@v3

      # Step 2: Set up Python 3.10
      - name: Use Python 3
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Step 3: Install dependencies using pipenv
      - name: Install Dependencies
        working-directory: starter/backend
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install

      # Step 4: Run tests
      - name: Run Tests
        working-directory: starter/backend
        run: pipenv run test

  # Build job: builds the Docker image if linting and tests succeed
  Build:
    needs: [Linting, Test] # This job only runs if both Linting and Test jobs pass
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Check the Repository
        uses: actions/checkout@v3

      # Step 2: Build the Docker image
      - name: Build Docker Image
        working-directory: starter/backend
        run: docker build --tag mp-backend:latest .
